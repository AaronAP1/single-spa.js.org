(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{248:function(e,t,n){"use strict";n.r(t);n(26),n(19),n(20),n(320),n(321),n(340);var a=n(0),r=n.n(a),o=n(290),l=n(342),c="undefined"!=typeof window?window.URLSearchParams:n(355).URLSearchParams;t.default=function(e){var t=new c(e.location.search),n="./"+t.get("code")+".js";if(!l.keys().includes(n))return r.a.createElement(o.a,null,r.a.createElement("div",{className:"container container--fluid padding-horiz--xl",style:{marginTop:"8px"}},t.get("code")?"We could not find an explanation page for the error code "+t.get("code"):"No code query param specified. Could not show error page."));var a=l("./"+t.get("code")+".js").default,i=t.getAll("arg");return r.a.createElement(o.a,null,r.a.createElement("div",{className:"container container--fluid padding-horiz--xl margin-top--xl",style:{marginBottom:"6.8rem"}},r.a.createElement(a,{errorCodeArgs:i,getErrorCodeArg:function(e,t){var n=t?"("+t+")":"(unknown)";return i.length>e?i[e]:n}}),r.a.createElement("a",{href:"https://github.com/CanopyTax/single-spa.js.org/edit/master/website/src/components/Errors/Codes/"+t.get("code")+".js"},"Edit this page")))}},291:function(e,t,n){"use strict";var a=n(1),r=n(0),o=n.n(r),l=n(287),c=n.n(l),i=n(289),s=n(286),m=n(288);t.a=function(){var e=Object(s.a)().siteConfig,t=void 0===e?{}:e,n=t.themeConfig,l=(void 0===n?{}:n).footer;if(!l)return null;var u=l.copyright,p=l.links,d=void 0===p?[]:p,f=l.logo;return o.a.createElement("footer",{className:c()("footer",{"footer--dark":"dark"===l.style})},o.a.createElement("div",{className:"container"},d&&d.length>0&&o.a.createElement("div",{className:"row footer__links"},d.map((function(e,n){return o.a.createElement("div",{key:n,className:"col footer__col"},null!=e.title?o.a.createElement("h4",{className:"footer__title"},e.title):null,null!=e.items&&Array.isArray(e.items)&&e.items.length>0?o.a.createElement("ul",{className:"footer__items"},e.items.map((function(e,l,c){return o.a.createElement(r.Fragment,{key:l},o.a.createElement("li",{key:e.href||e.to,className:"footer__item"},e.label&&o.a.createElement(i.a,Object(a.a)({className:"footer__link-item"},e,e.href?{target:"_blank",rel:"noopener noreferrer",href:e.href}:{to:Object(m.a)(e.to)}),e.label),e.html&&o.a.createElement("div",{dangerouslySetInnerHTML:{__html:e.html}})),c.length-1===l&&2===n&&o.a.createElement(o.a.Fragment,null,o.a.createElement("li",{key:"gh-star",className:"footer__item footer__item--gh"},o.a.createElement("iframe",{title:"github",src:"https://ghbtns.com/github-btn.html?user="+t.organizationName+"&repo="+t.projectName+"&type=star&count=true&size=small"})),o.a.createElement("li",{key:"license",className:"footer__item"},o.a.createElement("a",{href:Object(m.a)("img/icons/148705-essential-collection/license/license.html")},"License for icons"))))}))):null)}))),(f||u)&&o.a.createElement("div",{className:"text--center"},f&&f.src&&o.a.createElement("a",{className:"footer__logo margin-bottom--sm",href:"https://www.canopytax.com/",target:"_blank",rel:"noopener noreferrer"},o.a.createElement("img",{alt:f.alt,src:Object(m.a)(f.src)})),u)))}},301:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));n(344),n(71);var a=n(0),r=n.n(a);function o(e){var t=e.children.split("\n"),n=t.find((function(e){return e.trim()!==e})),a=n?/([^\s])/.exec(n).index:0,o=t.map((function(e){return e.slice(a)})).filter((function(e,t){return e.length>0||t>0})).join("\n");return r.a.createElement("pre",null,o)}},342:function(e,t,n){var a={"./1.js":343,"./2.js":349,"./3.js":350,"./4.js":351,"./5.js":352,"./6.js":353,"./7.js":354};function r(e){var t=o(e);return n(t)}function o(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=342},343:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return l}));var a=n(0),r=n.n(a),o=n(301);function l(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("h1",null,"#1: singleSpa.start() was not called"),r.a.createElement("p",null,r.a.createElement("a",{href:"/docs/api#start"},"singleSpa.start()")," has not been called, 5000ms after single-spa was loaded. Before start() is called, apps can be declared and loaded, but not bootstrapped or mounted."),r.a.createElement("h2",null,"To fix:"),r.a.createElement("div",null,r.a.createElement(o.a,null,"\n            // Insert this into your single-spa root config\n            singleSpa.start();\n          ")),r.a.createElement("h2",null,"Explanation:"),r.a.createElement("p",null,"The single-spa start() API exists to give you fine-grained control over performance. In the majority of use cases, you should call singleSpa.start() immediately after ",r.a.createElement("a",{href:"http://localhost:3000/docs/api#registerapplication"},"registering your applications"),". It was designed for situations where you want to start downloading a single-spa application's code while you're waiting for initial user data or context. To do that, call registerApplication() immediately but delay calling start until the data is loaded."))}},349:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return l}));var a=n(0),r=n.n(a),o=n(301);function l(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("h1",null,"#2: Cannot mount parcel - config not provided"),r.a.createElement("p",null,"Cannot mount parcel without a config object or config loading function."),r.a.createElement("h2",null,"To fix:"),r.a.createElement("div",null,r.a.createElement("p",null,"Raw, framework agnostic code:"),r.a.createElement(o.a,null,"\n            // The most common root cause of this is that the parcelConfig failed to import correctly\n            import parcelConfig from './some-file';\n\n            console.log('Make sure this is defined!!!', parcelConfig);\n            const domElement = document.createElement('div');\n            mountParcel(parcelConfig, {domElement})\n          "),r.a.createElement("p",null,"React-specific code"),r.a.createElement(o.a,null,"\n            // If you're using react, this means the config prop you passed in is undefined,\n            // perhaps because it failed to import correctly.\n            import parcelConfig from './some-file';\n            import Parcel from 'single-spa-react/parcel';\n\n            console.log('Make sure this is defined!!!', parcelConfig);\n            <Parcel config={parcelConfig} />\n          ")),r.a.createElement("h2",null,"Explanation:"),r.a.createElement("p",null,"The single-spa start() API exists to give you fine-grained control over performance. In the majority of use cases, you should call singleSpa.start() immediately after ",r.a.createElement("a",{href:"http://localhost:3000/docs/api#registerapplication"},"registering your applications"),". It was designed for situations where you want to start downloading a single-spa application's code while you're waiting for initial user data or context. To do that, call registerApplication() immediately but delay calling start until the data is loaded."))}},350:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return l}));var a=n(0),r=n.n(a),o=n(301);function l(e){return r.a.createElement(r.a.Fragment,null,r.a.createElement("h1",null,"#3: Cannot mount parcel - name is not a string"),r.a.createElement("p",null,"Parcel name must be a string, if provided. Was given ",r.a.createElement("code",null,e.getErrorCodeArg(0,"unknown")),"."),r.a.createElement("h2",null,"To fix:"),r.a.createElement("div",null,r.a.createElement(o.a,null,"\n            // The easiest way to avoid this error is let single-spa control the name of your parcel\n            const parcelConfig = singleSpaReact({...});\n            mountParcel(parcelConfig, {domElement});\n          "),r.a.createElement(o.a,null,"\n            // Alternatively, you can provide a name but it must be a string\n            const parcelConfig = singleSpaReact({...});\n            parcelConfig.name = 'my-parcel';\n            mountParcel(parcelConfig, {domElement});\n          ")),r.a.createElement("h2",null,"Explanation:"),r.a.createElement("p",null,"When you call ",r.a.createElement("a",{href:"/docs/parcels-api#mountparcel"},"mountParcel")," or ",r.a.createElement("a",{href:"/docs/parcels-api#mountrootparcel"},"mountRootParcel"),", you must provide a ",r.a.createElement("a",{href:"/docs/parcels-overview#parcel-configuration"},"parcel config")," object. That object may optionally have a string property called name."))}},351:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return l}));var a=n(0),r=n.n(a),o=n(301);function l(e){return r.a.createElement(r.a.Fragment,null,r.a.createElement("h1",null,"#4: Cannot mount parcel - customProps must be an object"),r.a.createElement("p",null,"Parcel ",e.getErrorCodeArg(0,"unknown name")," was not provided a customProps object. Was given ",r.a.createElement("code",null,e.getErrorCodeArg(1,"unknown customProps")),"."),r.a.createElement("h2",null,"To fix:"),r.a.createElement("div",null,r.a.createElement(o.a,null,"\n            const parcelConfig = singleSpaReact({...});\n            const customProps = {domElement: document.getElementById('some-container')}\n\n            // You must provide a customProps object with a domElement property as the second argument to mountParcel()\n            mountParcel(parcelConfig, customProps);\n          ")),r.a.createElement("h2",null,"Explanation:"),r.a.createElement("p",null,"The ",r.a.createElement("a",{href:"/docs/parcels-api#mountparcel"},"mountParcel")," and ",r.a.createElement("a",{href:"/docs/parcels-api#mountrootparcel"},"mountRootParcel")," apis require that you pass in a second argument."))}},352:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return l}));var a=n(0),r=n.n(a),o=n(301);function l(e){return r.a.createElement(r.a.Fragment,null,r.a.createElement("h1",null,"#5: Cannot mount parcel - customProps.domElement not provided"),r.a.createElement("p",null,"Parcel ",e.getErrorCodeArg(0,"unknown name")," was not provided customProps.domElement. The domElement must be a DOMElement container in which the parcel will be mounted."),r.a.createElement("h2",null,"To fix:"),r.a.createElement("div",null,r.a.createElement(o.a,null,"\n            const parcelConfig = singleSpaReact({...});\n\n            // You must provide a domElement in your customProps provided to mountParcel\n            const customProps = {domElement: document.getElementById('some-container')}\n\n            mountParcel(parcelConfig, customProps);\n          ")),r.a.createElement("h2",null,"Explanation:"),r.a.createElement("p",null,"The ",r.a.createElement("a",{href:"/docs/parcels-api#mountparcel"},"mountParcel")," and ",r.a.createElement("a",{href:"/docs/parcels-api#mountrootparcel"},"mountRootParcel")," apis require that you pass in customProps that have a property called ",r.a.createElement("code",null,"domElement")," that is a DOMElement."))}},353:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return l}));var a=n(0),r=n.n(a),o=n(301);function l(e){return r.a.createElement(r.a.Fragment,null,r.a.createElement("h1",null,"#6: Cannot unmount parcel because it is not mounted"),r.a.createElement("p",null,"Parcel ",e.getErrorCodeArg(0,"unknown name")," cannot be unmounted because it is not currently mounted. The parcel is in ",r.a.createElement("code",null,e.getErrorCodeArg(1,"unknown"))," status."),r.a.createElement("h2",null,"To fix:"),r.a.createElement("div",null,r.a.createElement(o.a,null,"\n            const parcelConfig = singleSpaVue({...});\n            const customProps = {domElement: document.getElementById('some-container')}\n            const parcel = mountParcel(parcelConfig, customProps);\n\n            // Wait for the parcel to mount before attempting to unmount it\n            parcel.mountPromise.then(parcel => {\n              // Now it is safe to call unmount\n              parcel.unmount()\n            })\n\n            // Or, check the status before unmounting\n            if (parcel.getAppStatus() === 'MOUNTED') {\n              parcel.unmount()\n            }\n          ")),r.a.createElement("h2",null,"Explanation:"),r.a.createElement("p",null,"A parcel has exactly one ",r.a.createElement("a",{href:"/docs/api#getappstatus"},"status")," that indicates which stage of mounting and unmounting it is in. You may only call parcel.unmount() when the parcel is in MOUNTED status."))}},354:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return l}));var a=n(0),r=n.n(a),o=n(301);function l(e){return r.a.createElement(r.a.Fragment,null,r.a.createElement("h1",null,"#7: Loading function resolved with invalid parcel config"),r.a.createElement("p",null,"When mounting a parcel, the config loading function must return a promise that resolves with the parcel config"),r.a.createElement("h2",null,"To fix:"),r.a.createElement("div",null,r.a.createElement("div",null,"Framework agnostic code:"),r.a.createElement(o.a,null,"\n            const customProps = {domElement: document.getElementById('some-container')}\n            \n            // You need to ensure that the System.import() or import() promise resolves with a valid parcel config object\n            const parcel = mountParcel(() => import('./some-parcel.js'), customProps);\n          "),r.a.createElement("div",null,"React code:"),r.a.createElement(o.a,null,"\n            // You need to ensure that the System.import() or import() promise resolves with a valid parcel config object\n            <Parcel config={() => System.import('@org-name/some-parcel')} />\n          ")),r.a.createElement("h2",null,"Explanation:"),r.a.createElement("p",null,"You can call ",r.a.createElement("a",{href:"/docs/parcels-api#mountparcel"},"mountParcel")," and ",r.a.createElement("a",{href:"/docs/parcels-api#mountrootparcel"},"mountRootParcel")," with a",r.a.createElement("a",{href:"https://single-spa.js.org/docs/parcels-api#mountparcel"},"asynchronous loading function")," as the first argument. When doing so, the loading function must return a promise that resolves with a valid ",r.a.createElement("a",{href:"https://single-spa.js.org/docs/parcels-overview#parcel-configuration"},"parcel config object"),"."))}}}]);