(window.webpackJsonp=window.webpackJsonp||[]).push([[138],{266:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return c}));var a=n(1),o=n(9),r=(n(0),n(309)),i={id:"layout-overview",title:"Layout Engine",sidebar_label:"Overview"},l=[{value:"Introduction",id:"introduction",children:[]},{value:"Installation",id:"installation",children:[{value:"Project status",id:"project-status",children:[]},{value:"Browser / NodeJS support",id:"browser--nodejs-support",children:[]},{value:"Requirements",id:"requirements",children:[]}]},{value:"Basic usage",id:"basic-usage",children:[]}],s={rightToc:l},p="wrapper";function c(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)(p,Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"introduction"},"Introduction"),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/single-spa/single-spa-layout/"}),"Github repository")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"single-spa-layout")," npm package is an optional add-on to single-spa. The layout engine provides a routing API that controls your top level routes, applications, and dom elements. Using single-spa-layout makes it easier to accomplish the following:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"DOM placement and ordering of applications."),Object(r.b)("li",{parentName:"ul"},"Loading UIs when applications are downloaded."),Object(r.b)("li",{parentName:"ul"},"Default routes for Not Found / 404 pages."),Object(r.b)("li",{parentName:"ul"},"Transitions between routes (implementation pending)."),Object(r.b)("li",{parentName:"ul"},"Server side rendering of single-spa applications"),Object(r.b)("li",{parentName:"ul"},"Error pages")),Object(r.b)("p",null,"In the browser, the layout engine performs two major tasks:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Generate ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/#configuration-object"}),"single-spa registration config")," from an HTML Element and/or JSON object."),Object(r.b)("li",{parentName:"ol"},"Listen to ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/api/#events"}),"routing events")," to ensure that all DOM elements are laid out correctly before the single-spa applications are mounted.")),Object(r.b)("p",null,"On the server, the layout engine performs two tasks:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Construct a ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/layout-api#constructserverlayout"}),"server layout object")," from an HTML template."),Object(r.b)("li",{parentName:"ol"},"Send an HTML document (HTTP response headers and body) to the browser, based on the server layout object and current route.")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"single-spa-layout")," is 3.2kb gzipped (9kb ungzipped)."),Object(r.b)("h2",{id:"installation"},"Installation"),Object(r.b)("p",null,"You only need to install the layout engine into your ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/"}),"root config")," (not in any other application)."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"npm install --save single-spa-layout@beta\n\n# or\nyarn add single-spa-layout@beta\n")),Object(r.b)("h3",{id:"project-status"},"Project status"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"single-spa-layout")," is new and currently released under the ",Object(r.b)("inlineCode",{parentName:"p"},"beta")," dist-tag on npm. We are gathering feedback and improving the layout engine in preparation for a stable release. Although we do not expect the layout engine to change drastically, we do not recommend using it in a production setting until it is released as stable."),Object(r.b)("h3",{id:"browser--nodejs-support"},"Browser / NodeJS support"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"single-spa-layout")," works in all browsers supported by single-spa, including IE11. On the server, all NodeJS versions that support ESM are supported."),Object(r.b)("h3",{id:"requirements"},"Requirements"),Object(r.b)("p",null,"You must use single-spa@>=5.4.0 in order for the layout engine to work. Additionally, you may not provide custom ",Object(r.b)("inlineCode",{parentName:"p"},"domElementGetter")," functions for any of your single-spa applications, as those override the configuration within single-spa-layout."),Object(r.b)("h2",{id:"basic-usage"},"Basic usage"),Object(r.b)("p",null,"In your root html file, add a ",Object(r.b)("inlineCode",{parentName:"p"},"<template>")," element to the head. It should have a ",Object(r.b)("inlineCode",{parentName:"p"},"<single-spa-router>")," element that contains ",Object(r.b)("inlineCode",{parentName:"p"},"<route>")," elements, ",Object(r.b)("inlineCode",{parentName:"p"},"<application>")," elements, and any other dom elements:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),'<html>\n  <head>\n    <template id="single-spa-layout">\n      <single-spa-router>\n        <nav class="topnav">\n          <application name="@organization/nav"></application>\n        </nav>\n        <div class="main-content">\n          <route path="settings">\n            <application name="@organization/settings"></application>\n          </route>\n          <route path="clients">\n            <application name="@organization/clients"></application>\n          </route>\n        </div>\n        <footer>\n          <application name="@organization/footer"></application>\n        </footer>\n      </single-spa-router>\n    </template>\n  </head>\n</html>\n')),Object(r.b)("p",null,"Then inside of your root-config's JavaScript code, add the following:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"import { registerApplication, start } from 'single-spa';\nimport {\n  constructApplications,\n  constructRoutes,\n  constructLayoutEngine,\n} from 'single-spa-layout';\n\nconst routes = constructRoutes(document.querySelector('#single-spa-layout'));\nconst applications = constructApplications({\n  routes,\n  loadApp({ name }) {\n    return System.import(name);\n  },\n});\nconst layoutEngine = constructLayoutEngine({ routes, applications });\n\napplications.forEach(registerApplication);\nstart();\n")))}c.isMDXComponent=!0},309:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return u}));var a=n(0),o=n.n(a),r=o.a.createContext({}),i=function(e){var t=o.a.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},l=function(e){var t=i(e.components);return o.a.createElement(r.Provider,{value:t},e.children)};var s="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},c=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,s=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===t.indexOf(a)&&(n[a]=e[a]);return n}(e,["components","mdxType","originalType","parentName"]),c=i(n),u=a,b=c[l+"."+u]||c[u]||p[u]||r;return n?o.a.createElement(b,Object.assign({},{ref:t},s,{components:n})):o.a.createElement(b,Object.assign({},{ref:t},s))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[s]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<r;u++)i[u]=n[u];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}c.displayName="MDXCreateElement"}}]);