(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{202:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return c}));n(59),n(32),n(23),n(24),n(60),n(0);var a=n(225);function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var o={id:"parcels-api",title:"Parcels API",sidebar_label:"Parcels API"},l=[{value:"mounting",id:"mounting",children:[{value:"Parcel Props",id:"parcel-props",children:[]},{value:"mountParcel",id:"mountparcel",children:[]},{value:"mountRootParcel",id:"mountrootparcel",children:[]}]},{value:"Parcel Object",id:"parcel-object",children:[{value:"unmount",id:"unmount",children:[]},{value:"mount",id:"mount",children:[]},{value:"update",id:"update",children:[]},{value:"getStatus",id:"getstatus",children:[]},{value:"loadPromise",id:"loadpromise",children:[]},{value:"bootstrapPromise",id:"bootstrappromise",children:[]},{value:"mountPromise",id:"mountpromise",children:[]},{value:"unmountPromise",id:"unmountpromise",children:[]}]}],p={rightToc:l},i="wrapper";function c(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(a.b)(i,r({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Most parcel methods will be called on the parcel itself, with the exception being around mounting."),Object(a.b)("h2",{id:"mounting"},"mounting"),Object(a.b)("p",null,"Both mount methods take a ",Object(a.b)("a",r({parentName:"p"},{href:"/docs/parcels-overview#parcel-configuration"}),"parcelConfig")," and ",Object(a.b)("a",r({parentName:"p"},{href:"/docs/parcels-api#parcel-props"}),"additional props"),".\nThey both return a ",Object(a.b)("a",r({parentName:"p"},{href:"/docs/parcels-api#parcel-object"}),"parcel object"),". The parcel object contains all additional exposed methods."),Object(a.b)("h3",{id:"parcel-props"},"Parcel Props"),Object(a.b)("p",null,"When mounting a parcel the second argument is props, a javascript object of properties to be passed to the parcel. This object must have a domElement prop, which is the dom node that the parcel will mount into."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"const parcelProps = {\n  customerId: 7,\n  numberOfTasks: 42,\n  domElement: document.createElement('div')\n}\n")),Object(a.b)("h3",{id:"mountparcel"},"mountParcel"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"applicationProps.mountParcel(parcelConfig, parcelProps)"),". Each application is provided a mountParcel function.\nThe main advantage to using an applications ",Object(a.b)("inlineCode",{parentName:"p"},"mountParcel")," function is that parcels mounted via an\napplications ",Object(a.b)("inlineCode",{parentName:"p"},"mountParcel")," will be automatically unmounted when the application is unmounted."),Object(a.b)("h3",{id:"mountrootparcel"},"mountRootParcel"),Object(a.b)("p",null,"The ",Object(a.b)("a",r({parentName:"p"},{href:"/docs/api#mountrootparcel"}),"mountRootParcel")," method will mount the parcel but ",Object(a.b)("inlineCode",{parentName:"p"},"unmount")," must be called manually."),Object(a.b)("h2",{id:"parcel-object"},"Parcel Object"),Object(a.b)("p",null,"The parcel object contains the following functions and methods:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"/docs/parcels-api#mount"}),"mount")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"/docs/parcels-api#unmount"}),"unmount")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"/docs/parcels-api#update"}),"update")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"/docs/parcels-api#getstatus"}),"getStatus")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"/docs/parcels-api#loadpromise"}),"loadPromise")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"/docs/parcels-api#bootstrappromise"}),"bootstrapPromise")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"/docs/parcels-api#mountpromise"}),"mountPromise")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"/docs/parcels-api#unmountpromise"}),"unmountPromise"))),Object(a.b)("h3",{id:"unmount"},"unmount"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"parcel.unmount()")," returns a promise that resolves once the parcel is successfully unmounted. The promise may throw an error which needs to be handled."),Object(a.b)("h3",{id:"mount"},"mount"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"parcel.mount()")," returns a promise that resolves once the parcel is successfully mounted. The promise can throw an error which needs to be handled."),Object(a.b)("h3",{id:"update"},"update"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"parcel.update(props)")," allows you to change the props passed into a parcel. Note that not all parcels support being updated. The ",Object(a.b)("inlineCode",{parentName:"p"},"update")," function returns a promise that resolves when the parcel is finished updating. See ",Object(a.b)("a",r({parentName:"p"},{href:"parcels-overview.html#update-optional"}),"other documentation")," and ",Object(a.b)("a",r({parentName:"p"},{href:"https://single-spa.js.org/docs/parcels-overview.html#quick-example"}),"example")," for more information."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"const parcel = singleSpa.mountRootParcel(parcelConfig, parcelProps);\nparcel.update(newParcelProps);\n")),Object(a.b)("h3",{id:"getstatus"},"getStatus"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"parcel.getStatus()")," retuns a string of that parcels status. The string status is one of the following:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"NOT_BOOTSTRAPPED"),": The parcel has not been bootstrapped"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"BOOTSTRAPPING"),": The parcel is bootstrapping but has not finished"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"NOT_MOUNTED"),": The parcel has bootstrapped, but is not mounted"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"MOUNTED"),": The parcel is currently active and mounted to the DOM"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"UNMOUNTING"),": The parcel is unmounting, but has not finished"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"UPDATING"),": The parcel is currently being updated, but has not finished"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"SKIP_BECAUSE_BROKEN"),": The parcel threw an error during bootstrap, mount, unmount, or update. Other parcels may continue normally, but this one will be skipped.")),Object(a.b)("h3",{id:"loadpromise"},"loadPromise"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"parcel.loadPromise()")," returns a promise that will resolve once the parcel has been loaded."),Object(a.b)("h3",{id:"bootstrappromise"},"bootstrapPromise"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"parcel.bootstrapPromise()")," returns a promise that will resolve once the parcel has been bootstrapped."),Object(a.b)("h3",{id:"mountpromise"},"mountPromise"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"parcel.mountPromise()")," returns a promise that will resolve once the parcel has been mounted. This is helpful for knowing exactly when a parcel has been appended to the DOM"),Object(a.b)("h3",{id:"unmountpromise"},"unmountPromise"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"parcel.unmountPromise()")," returns a promise that will resolve once the parcel has been unmounted."))}c.isMDXComponent=!0},225:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return s}));var a=n(0),r=n.n(a),o=r.a.createContext({}),l=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},p=function(e){var t=l(e.components);return r.a.createElement(o.Provider,{value:t},e.children)};var i="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,i=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===t.indexOf(a)&&(n[a]=e[a]);return n}(e,["components","mdxType","originalType","parentName"]),u=l(n),s=a,b=u[p+"."+s]||u[s]||c[s]||o;return n?r.a.createElement(b,Object.assign({},{ref:t},i,{components:n})):r.a.createElement(b,Object.assign({},{ref:t},i))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=u;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p[i]="string"==typeof e?e:a,l[1]=p;for(var s=2;s<o;s++)l[s]=n[s];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);