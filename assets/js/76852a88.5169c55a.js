"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5911],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return n?o.createElement(f,l(l({ref:t},c),{},{components:n})):o.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[m]="string"==typeof e?e:r,l[1]=a;for(var p=2;p<i;p++)l[p]=n[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9263:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return a},metadata:function(){return p},toc:function(){return m}});var o=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],a={id:"ecosystem-svelte",title:"single-spa-svelte",sidebar_label:"Svelte"},s=void 0,p={unversionedId:"ecosystem-svelte",id:"version-5.x/ecosystem-svelte",title:"single-spa-svelte",description:"single-spa-svelte is a helper library that helps implement single-spa registered application lifecycle functions (bootstrap, mount and unmount) for for use with svelte. Check out the single-spa-svelte github.",source:"@site/versioned_docs/version-5.x/ecosystem-svelte.md",sourceDirName:".",slug:"/ecosystem-svelte",permalink:"/docs/ecosystem-svelte",draft:!1,editUrl:"https://github.com/single-spa/single-spa.js.org/blob/master/website/versioned_docs/version-5.x/ecosystem-svelte.md",tags:[],version:"5.x",frontMatter:{id:"ecosystem-svelte",title:"single-spa-svelte",sidebar_label:"Svelte"},sidebar:"version-5.x/docs",previous:{title:"Preact",permalink:"/docs/ecosystem-preact"},next:{title:"Riot",permalink:"/docs/ecosystem-riot"}},c={},m=[{value:"Quickstart",id:"quickstart",level:2},{value:"Options",id:"options",level:2},{value:"single-spa props",id:"single-spa-props",level:2}],u={toc:m};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"single-spa-svelte is a helper library that helps implement ",(0,i.kt)("a",{parentName:"p",href:"configuration#registering-applications"},"single-spa registered application")," ",(0,i.kt)("a",{parentName:"p",href:"/docs/building-applications#registered-application-lifecycle"},"lifecycle functions")," (bootstrap, mount and unmount) for for use with ",(0,i.kt)("a",{parentName:"p",href:"https://svelte.technology/"},"svelte"),". Check out the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/single-spa/single-spa-svelte"},"single-spa-svelte github"),"."),(0,i.kt)("h2",{id:"quickstart"},"Quickstart"),(0,i.kt)("p",null,"First, in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/single-spa/single-spa/blob/master/docs/applications.md#registered-applications"},"single-spa application"),", run ",(0,i.kt)("inlineCode",{parentName:"p"},"npm install --save single-spa-svelte"),". Then, create an entry file with the following."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import singleSpaSvelte from 'single-spa-svelte';\nimport myRootSvelteComponent from 'my-root-svelte-component.js';\n\nconst svelteLifecycles = singleSpaSvelte({\n  component: myRootSvelteComponent,\n  domElementGetter: () => document.getElementById('svelte-app'),\n  props: { someData: 'data' }\n});\n\nexport const bootstrap = svelteLifecycles.bootstrap;\nexport const mount = svelteLifecycles.mount;\nexport const unmount = svelteLifecycles.unmount;\n")),(0,i.kt)("h2",{id:"options"},"Options"),(0,i.kt)("p",null,"All options are passed to single-spa-svelte via the ",(0,i.kt)("inlineCode",{parentName:"p"},"opts")," parameter when calling ",(0,i.kt)("inlineCode",{parentName:"p"},"singleSpaSvelte(opts)"),". The following options are available:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"component"),": (required) The root component that will be rendered. This component should be compiled by svelte and ",(0,i.kt)("strong",{parentName:"li"},"not")," an iife."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"domElementGetter"),": (optional) A function which will return a dom element. The root component will be mounted in this element. If not provided, a default dom element will be provided.")),(0,i.kt)("p",null,"Svelte-specific options"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"anchor"),": (optional) A child of the dom element identified by ",(0,i.kt)("inlineCode",{parentName:"li"},"domElementGetter")," to render the component immediately before"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"hydrate"),": (optional) See the svelte ",(0,i.kt)("a",{parentName:"li",href:"https://svelte.dev/docs#Creating_a_component"},"Creating a component")," documentation"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"intro"),": (optional) If ",(0,i.kt)("inlineCode",{parentName:"li"},"true"),", will play transitions on initial render, rather than waiting for subsequent state changes"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"props"),": (optional) An object of properties to supply to the component")),(0,i.kt)("h2",{id:"single-spa-props"},"single-spa props"),(0,i.kt)("p",null,"All ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/#registerapplication"},"single-spa props")," are passed to the svelte component as props. The props provided to ",(0,i.kt)("inlineCode",{parentName:"p"},"singleSpaSvelte({props: {...}})")," are merged with the single-spa props."))}d.isMDXComponent=!0}}]);